class Solution {
    public int trap(int[] height) 
    {
        if(height.length<3)
            return 0;
        int start=-1;
        int end=-1;
        for(int i=0; i<height.length-1; i++)
        {
            if(height[i]>height[i+1])
            {
                start=i;
                break;
            }
        }
        for(int i=height.length-1; i>0; i--)
        {
            if(height[i]>height[i-1])
            {
                end=i;
                break;
            }
        }
        if(start==-1 || end==-1 || end<=start)
            return 0;
        int total_water=0;
        int water=0;
        int width=0;
        int block_uw=0;
        int L=start;
        for(int R=start+1; R<=end; R++)
        {
            if(height[R]>=height[L])
            {
                water= width*height[L] - block_uw;
                total_water= total_water+water;
                L=R;
                block_uw=0;
                width=0;
                water=0;
            }
            else
            {
                width++;
                block_uw= block_uw+height[R];
            }
        }
        if(L!=end)
        {
            width=0;
            water=0;
            block_uw=0;
            start=end;
            end=L;
            int R=start;
            for(L=start-1; L>=end; L--)
            {
                if(height[L]>=height[R])
                {
                    water= width*height[R] - block_uw;
                    total_water= total_water+water;
                    R=L;
                    width=0;
                    water=0;
                    block_uw=0;
                }
                else
                {
                    width++;
                    block_uw= block_uw+height[L];
                }
            }
        }
        return total_water;
    }
}
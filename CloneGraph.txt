Clone Graph
Given a node in a connected undirected graph, return a deep copy of the graph.

Each node in the graph contains an integer value and a list of its neighbors.

class Node {
    public int val;
    public List<Node> neighbors;
}

CODE:

class Solution {
    HashMap<Node, List<Node>> cloneMap;
    public Solution()
    {
        cloneMap=new HashMap<>();
    }
    public Node cloneGraph(Node node) 
    {
        if(node==null)
        {
            Node null_node=null;
            return null_node;
        }
        this.dfs(node, new HashSet<Node>());
        Node curr=new Node();
        for(Map.Entry<Node, List<Node>> i : cloneMap.entrySet())
        {
            Node temp=i.getKey();
            curr=temp;
            curr.neighbors=new ArrayList<Node>();
            curr.neighbors.addAll(i.getValue());
        }
        cloneMap.clear();
        return curr;
    }
    public void dfs(Node node, HashSet<Node> visited)
    {
        if(node==null || visited.contains(node))
            return;
        visited.add(node);
        int n=node.neighbors.size();
        for(int i=0;i<n;i++)
        {
            dfs(node.neighbors.get(i), visited);
        }
        cloneMap.put(node, new ArrayList<Node>());
        cloneMap.get(node).addAll(node.neighbors);
        visited.remove(node);
    }
}
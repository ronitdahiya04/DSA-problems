Count Paths
Solved 
There is an m x n grid where you are allowed to move either down or to the right at any point in time.

Given the two integers m and n, return the number of possible unique paths that can be taken from the top-left corner of the grid (grid[0][0]) to the bottom-right corner (grid[m - 1][n - 1]).

You may assume the output will fit in a 32-bit integer.

CODE:

class Solution {
    public int uniquePaths(int m, int n) 
    {
        int[] prevRow=new int[m];

        for(int i=n-1 ; i>=0 ; i--)
        {
            int[] curRow=new int[m];
            curRow[m-1]=1;
            for(int j=m-2 ; j>=0 ; j--)
            {
                curRow[j]=curRow[j+1]+prevRow[j];
            }
            prevRow=curRow;
        }
        return prevRow[0];
    }
}



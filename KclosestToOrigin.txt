K Closest Points to Origin
Solved 
You are given an 2-D array points where points[i] = [xi, yi] represents the coordinates of a point on an X-Y axis plane. You are also given an integer k.

Return the k closest points to the origin (0, 0).

The distance between two points is defined as the Euclidean distance (sqrt((x1 - x2)^2 + (y1 - y2)^2)).

You may return the answer in any order.

class mycomparator implements Comparator<int[]>
{
    public int compare(int[] a1, int[] a2)
    {
        int dist1 = a1[0]*a1[0] + a1[1]*a1[1];
        int dist2 = a2[0]*a2[0] + a2[1]*a2[1];
        if(dist1<dist2)
            return -1;
        else if(dist1>dist2)
            return 1;
        return 0;
    }
}
class Solution 
{
    public int[][] kClosest(int[][] points, int k) 
    {
        PriorityQueue<int[]> MinHeap = new PriorityQueue<int[]>(new mycomparator());
        int arr[]=new int[2];
        for(int i=0;i<points.length;i++)
        {
            MinHeap.add(new int[]{points[i][0], points[i][1]});
        }
        int[][] result=new int[k][2];
        for(int i=0;i<k;i++)
        {
            arr=MinHeap.poll();
            result[i][0]=arr[0];
            result[i][1]=arr[1];
        }
        return result;
    }
}